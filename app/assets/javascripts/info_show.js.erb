window.onload = page_ready
function page_ready(){

  filter_init();
  filter_form();
  real_time_data_init();
  get_real_time_data();
  document.getElementById('locale-form').addEventListener('change',function(){
    this.submit();
  })
  analytics();

}


  document.addEventListener('DOMContentLoaded', function() {
    var elems = document.querySelectorAll('.modal');
    var instances = M.Modal.init(elems);
  });
  document.addEventListener('DOMContentLoaded', function() {
    var elems = document.querySelectorAll('.collapsible');
    var instances = M.Collapsible.init(elems);
  });
  document.addEventListener('DOMContentLoaded', function() {
    var elems = document.querySelectorAll('.sidenav');
    var instances = M.Sidenav.init(elems);
  });
var real_time_data;
var init_data;

function real_time_data_init() {
    real_time_data = new Vue({
      el: '#real-time-data',
      data: {data: [[]]}
    })
}
var filter = [];
function filter_init() {
    filter_data = new Vue({
      el: '#filter',
      data: {filters: [], selected_filters: []},
      methods:{
        saveFilter: function(){
          localStorage.setItem(window.location.pathname, filter_data.selected_filters )
        }
      }
    })
}
function get_real_time_data(){
  if (window.location.pathname.includes("/infos/")){
    let id = window.location.pathname.split("/").pop()

    var link = `${window.location.protocol}//${window.location.host}/get/${id}`;
    var data = {};
    function http_request() {
      Vue.http.get(link).then(function(response){
        data = response.data.data;
        if (filter_data.filters.length == 0){
          var temp =[]
          data.forEach((item, index)=>{
            temp[index] = item[0]
          })
          filter_data.filters = temp
          if (localStorage.getItem(window.location.pathname)){
            filter_data.selected_filters = localStorage.getItem(window.location.pathname).split(',')
          }
        }
        if (filter_data.selected_filters.length != 0){
          data = data.filter((current)=>{
            if (filter_data.selected_filters.includes(current[0])){
              return current;
            }
          })
        }
        real_time_data.data = data;
      }, function(error){
        console.log(error.statusText);
      });
    }
    http_request.call(this)
        var elems = document.querySelectorAll('.collapsible');
        var instances = M.Collapsible.init(elems);
    setInterval(http_request.bind(this), 100)
  }
}

function analytics() {
    let id = window.location.pathname.split("/").pop()
var analytic_link = `${window.location.protocol}//${window.location.host}/analytics/${id}`;
// debugger;
Vue.http.get(analytic_link).then(function(response){
  createChart(response.body)
 },
 function(error){
   console.log(error.statusText);
 }
)

}
function createChart(data) {
  var ctx = document.getElementById('myChart').getContext('2d');
  colors = data.labels.map(()=>{
    return getRandomColor()
  })
  // debugger
  // var fillPattern = ctx.createPattern(img, 'repeat');
  var chart = new Chart(ctx, {
      // The type of chart we want to create
      type: 'doughnut',

      // The data for our dataset
      data: {
          labels: data.labels,
          datasets: [{
              label: 'My First dataset',
              backgroundColor: 'rgb(255, 99, 132)',
              backgroundColor: colors,
              data: data.values
          }],
      },

      // Configuration options go here
      options: {}
  });
}
function getRandomColor() {
  var letters = '0123456789ABCDEF';
  var color = '#';
  for (var i = 0; i < 6; i++) {
    color += letters[Math.floor(Math.random() * 16)];
  }
  return color;
}
